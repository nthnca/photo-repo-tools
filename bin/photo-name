#!/bin/bash

# name_pictures.sh
#
# Rename photos in a way that is more meaningful and less likely to colide when
# you are using multiple cameras. {DATE}-{TIME}-{CAMERA}-{ORIGINAL_NAME}.jpg
# Example: 20150130-124140-GF1-P1234567.jpg

TMP_POSTFIX=id_tmp
TMP_CAMERA_NAMES=map.$TMP_POSTFIX

if [ $# -gt 0 ]; then
  echo "Running in test mode."
  TEST="Dry run: "
fi

# Add more camera names to this map as necessary.
cat << EOF > $TMP_CAMERA_NAMES
=SCAN
DMC-GX7=GX7
DMC-LX3=LX3
Nexus 7=Nexus7
Nexus 4=Nexus4
Nexus 5=Nexus5
Nexus 5X=Nexus5X
Nexus 10=Nexus10
Moto G (4)=MotoG4
MotoE2(4G-LTE)=MotoE2
Galaxy Nexus=GalaxyNexus
Vespa=Vespa
SM-G900W8=GalaxyS5
EOF

# Processing the files in batches of 4 seems to be 2-4 times faster, moving to
# larger batches doesn't make much improvement, and eventually much worse.
COUNT=0
MAX_PROCESSES=4
for file in *.JPG; do
  echo "Processing $file ..."

  if [ ! -e "$file.$TMP_POSTFIX" ]; then
    # Get EXIF data for the image. Get more info using -verbose.
    identify -format '%[EXIF:*]' "$file" > "$file.$TMP_POSTFIX" &
  fi

  COUNT=$((COUNT+1))
  if [ $COUNT -eq $MAX_PROCESSES ]; then
    wait
    COUNT=0
  fi
done

# Wait for all background processes to complete.
wait

# Do the actual renaming.
for file in *.JPG; do
  ID_FILE="$file.$TMP_POSTFIX"
  DATE=`grep $exif:DateTimeOri < "$ID_FILE" | cut -b 23- | tr ' ' - | tr -d :`
  MODEL_TMP=`grep $exif:Model < "$ID_FILE" | cut -b 12-`

  MODEL_RES=`grep "^$MODEL_TMP"= map.id_tmp`
  MODEL="${MODEL_RES#*=}"

  if [ "$MODEL" = "" ]; then
    echo "The model type '$MODEL_TMP' wasn't recognized."
    exit 1
  fi

  NAME="${file%.*}.jpg"
  NAMEX="$DATE-$MODEL-$NAME"
  echo "${TEST}mv $file $NAMEX"
  if [ -z "$TEST" ]; then
    mv "$file" "$NAMEX"
    # Clean up the left over permissions from the fat32 file system.
    chmod -x "$NAMEX"
  fi
done

# Clean up if we aren't doing a dry run.
if [ -z "$TEST" ]; then
  rm -f *."$TMP_POSTFIX"
fi
